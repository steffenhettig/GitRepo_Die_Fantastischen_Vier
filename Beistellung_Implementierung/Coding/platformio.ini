; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
;default_envs = a-star32U4           ; the real Zumo robot
;default_envs = webots               ; Simulation see https://github.com/BlueAndi/RadonUlzer
default_envs = a-star32U4, webots    ; both simulation and real robot 

; *****************************************************************************
; Pololu zumo 32u4 Configuration
; *****************************************************************************
[env:a-star32U4]
platform = atmelavr
board = a-star32U4
upload_port=14
build_flags=
    -Wall
    -Wextra
    -std=gnu99
    -F_CPU=(16000000UL)
    -Isrc/Common
    -Isrc
lib_ignore =
    hal_sim
    service_sim
    Webots
;framework = arduino

; *****************************************************************************
; PC target environment for Webots simulation
;
; It is assumed that the environment variable WEBOTS_HOME is set to the
; Webots directory, e.g. WEBOTS_HOME=C:\Users\<user>\AppData\Local\Programs\Webots
; Also a native toolchain must be setup (msys2)
; -> https://github.com/BlueAndi/RadonUlzer#installation
; *****************************************************************************
[env:webots]
platform = native
build_flags =
    -std=c99
    -DTARGET_NATIVE
    -DWORK_SPACE_DIR=\"$PROJECT_DIR\"
    -I./lib/Webots/include/c
    -I./lib/Webots/include/cpp
    -L./lib/Webots/lib/controller
    -llibController
    -Isrc/Common
    -Isrc
lib_deps =
    Webots
lib_ignore =
    hal_target
    service_target
extra_scripts =
    pre:./scripts/create_webots_library.py
    post:./scripts/copy_webots_shared_libs.py
    post:./scripts/copy_track_file.py
build_type = debug

;  [env:test]
;   platform = native
;  build_flags =
;     -Isrc/Common